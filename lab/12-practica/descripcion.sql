connect nestorlab/nestor;

--BLOQUES ANÓNIMOS
BEGIN
	DBMS_OUTPUT.put_line('Hola mundo');
END;

SET SERVEROUTPUT ON

select * from empleado 
where matricula = '&MATRICULA';

DECLARE 
-- VARIABLES, CONSTANTES, CURSORES
V_NOMBRE VARCHAR(15) := '&NOMBRE';

BEGIN
	DBMS_OUTPUT.put_line('hola mundo');
	DBMS_OUTPUT.put_line(V_NOMBRE);
END;


--ahora hacemos un bloque anónimo
DECLARE
    V_TOTAL NUMBER(10,0);
    V_SUCURSAL VARCHAR2(50);
    V_ID_SUC NUMBER(10,0) := '&ID_SUC';
BEGIN
    SELECT S.NOMBRE, COUNT(E.MATRICULA) AS CONTEO
    INTO V_SUCURSAL, V_TOTAL
    FROM EMPLEADO E INNER JOIN SUCURSAL S
    ON E.ID_SUC = S.ID_SUC
    WHERE E.ID_SUC = V.ID_SUC
    GROUP BY S.NOMBRE;
    
    DBMS_OUTPUT.PUT_LINE('La sucursal de ' || V_SUCURSAL);
    DBMS_OUTPUT.PUT_LINE('Tiene   ' || V_TOTAL || ' EMPLEADOS');
    
END;

DESC EMPLEADO;

CREATE TABLE LAB_MARTES(
MATRICULA NUMBER(3,0),
NOMBRE VARCHAR2(10)
);

INSERT INTO LAB_MARTES VALUES (111,'RAY');
INSERT INTO LAB_MARTES VALUES (222,'JESUS');
INSERT INTO LAB_MARTES VALUES (333,'LESLY');

DESC LAB_MARTES;


DECLARE 
V_MATRICULA EMPLEADO.MATRICULA%TYPE := '&MATRICULA';
V_MAT EMPLEADO.MATRICULA%TYPE;
V_NOMBRE EMPLEADO.NOMBRE%TYPE;
BEGIN

    SELECT MATRICULA, NOMBRE 
    INTO V_MAT, V_NOMBRE
    FROM LAB_MARTES
    WHERE MATRICULA = V_MATRICULA;

    DBMS_OUTPUT.PUT_LINE('TU MATRICULA ES ' || V_MATRICULA);
    DBMS_OUTPUT.PUT_LINE('Y ESTA ASIGNADA A ' || V_NOMBRE);
END;


CONNECT nestorlab/nestor;
SELECT * FROM SUCURSAL;
--procedimiento almacenado
--PARAMETRO DE TIPO NUMERICO
CREATE OR REPLACE PROCEDURE CONTEO_POR_SUCURSAL (P_ID_SUC NUMBER)
AS 
    V_TOTAL NUMBER(10);
BEGIN
    SELECT COUNT(MATRICULA)
    INTO V_TOTAL
    FROM EMPLEADO
    WHERE ID_SUC = P_ID_SUC;
        DBMS_OUTPUT.PUT_LINE(V_TOTAL);
END;


--EXEC CONTEO_POR_SUCURSAL(3);


BEGIN
    CONTEO_POR_SUCURSAL(2);
END;



CREATE OR REPLACE PROCEDURE CONTEO_POR_SUCURSAL (P_ID_SUC NUMBER)
AS
    V_TOTAL NUMBER(10);
BEGIN
    SELECT COUNT(MATRICULA)
    INTO V_TOTAL
    FROM EMPLEADO
    WHERE ID_SUC = P_ID_SUC;
    
    IF V_TOTAL >= 15 THEN
        DBMS_OUTPUT.PUT_LINE('NUMERO DE EMPLEADOS ' || V_TOTAL || ' NOMINA ALTA');
    ELSE
        DMBS_OUTPUT.PUT_LINE('NUMERO DE EMPLEDAOS ' || V_TOTAL || ' NOMINA BAJA');
    END IF;
END;

EXEC CONTEO_POR_SUCURSAL(4);


CREATE OR REPLACE PROCEDURE SUC_EXCEPCION_IP(P_MATRICULA NUMBER)
AS
V_NOMBRE EMPLEADO.NOMBRE%TYPE;
BEGIN
    SELECT NOMBRE INTO V_NOMBRE
    FROM EMPLEADO
    WHERE MATRICULA=P_MATRICULA
    
    DBMS_OUTPUT.PUT_LINE('EL EMPLEADO ES ' || V_NOMBRE);
    
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20000, 'ERROR, NO HAY DATOS');
END;


EXEC SUC_EXCEPCION(99999);





